{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Piotr Wydra\\\\Git Projects\\\\React\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2020');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 27\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 62\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFilter: filterChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Expenses Found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 43\n    }, this), filteredExpenses.length > 0 && filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 76\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Expenses, \"d6AxVjxjRbYO2YFEia8LjUybrDc=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/Piotr Wydra/Git Projects/React/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMQ,mBAAmB,GAAGC,YAAY,IAAI;AACxCF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACH,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;AACnD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACH,GAFwB,CAAzB;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAC7BD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBAAc,QAAC,WAAD;AAEjD,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFkC;AAGjD,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHiC;AAIjD,MAAA,IAAI,EAAER,OAAO,CAACC;AAJmC,OAC5CD,OAAO,CAACS,EADoC;AAAA;AAAA;AAAA;AAAA,YAAnC,CAAlB;AAMH;;AAGD,sBAAQ,QAAC,IAAD;AAAM,IAAA,SAAS,EAAE,UAAjB;AAAA,4BACJ,QAAC,cAAD;AACI,MAAA,QAAQ,EAAEhB,YADd;AAEI,MAAA,cAAc,EAAEE;AAFpB;AAAA;AAAA;AAAA;AAAA,YADI,EAKHE,gBAAgB,CAACQ,MAAjB,KAA4B,CAA5B,iBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAL9B,EAMHR,gBAAgB,CAACQ,MAAjB,GAA0B,CAA1B,IAA+BR,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBAAc,QAAC,WAAD;AAE/D,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFgD;AAG/D,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAH+C;AAI/D,MAAA,IAAI,EAAER,OAAO,CAACC;AAJiD,OAC1DD,OAAO,CAACS,EADkD;AAAA;AAAA;AAAA;AAAA,YAAnC,CAN5B;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR;AAaH,CArCD;;GAAMlB,Q;;KAAAA,Q;AAuCN,eAAeA,QAAf","sourcesContent":["import React, {useState} from \"react\";\n\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpensesFilter\";\n\nconst Expenses = (props) => {\n\n    const [filteredYear, setFilteredYear] = useState('2020');\n\n    const filterChangeHandler = selectedYear => {\n        setFilteredYear(selectedYear);\n    };\n\n    const filteredExpenses = props.items.filter(expense => {\n        return expense.date.getFullYear().toString() === filteredYear;\n    });\n\n    let expensesContent = <p>No expenses found.</p>;\n\n    if (filteredExpenses.length > 0) {\n        expensesContent = filteredExpenses.map((expense) => (<ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n        />))\n    }\n\n    \n    return (<Card className={\"expenses\"}>\n        <ExpensesFilter\n            selected={filteredYear}\n            onChangeFilter={filterChangeHandler}\n        />\n        {filteredExpenses.length === 0 && <p>No Expenses Found.</p>}\n        {filteredExpenses.length > 0 && filteredExpenses.map((expense) => (<ExpenseItem\n            key={expense.id}\n            title={expense.title}\n            amount={expense.amount}\n            date={expense.date}\n        />))}\n    </Card>);\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}